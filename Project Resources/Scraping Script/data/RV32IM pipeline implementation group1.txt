Home - RV32IM Pipeline Implementation
Home | RV32IM Pipeline Implementation
Link
Search
Menu
Expand
Document
HomeHardware UnitsControl Unit Control Signals Generated by the Control Unit
Control Unit Design
Instructions and the Control Signals ALURegister FileBranch and Jump Detection UnitImmediate Value Generation UnitProgram Counter RegisterMultiplexersProgram Counter Incrimeting AdderPipeline RegisterMemory HierarchyData CacheData MemoryInstruction CacheInstruction MemoryTiming and Simulation DelaysSimulation Delays of Hardware UnitsClock Cycle PeriodHazard Detection and Handling HazardsTypes of HazardsHandling Data HazardsForwarding‌ ‌unit‌ ‌HardwareHandling Control HazardsPipeline Datapath with Forwarding MechanismIntegrated CPUTesting
This site uses Just the Docs, a documentation theme for Jekyll.
Project Repository on GitHub
RV32IM Pipeline Implementation
Table of Contents
Introduction Pipeline Datapath Team Supervisors Links
Introduction
The objective of this project was to design and implement a 5 stage pipeline CPU to support the RISC-V instruction architecture. This pipeline CPU supports the entire RV32IM ISA which contains 45 instructions. The designed pipeline CPU was implemented using behavioral modeling in verilogHDL and icarus Verilog was used compile and simulate. gtkWave was used to observe the behavior. GitHub Repository
Pipeline Datapath
Team
E/16/069, Damsy De Silve, email E/16/094, Shirly Ekanayake, email E/16/276, Buddhi Perera, email
Supervisors
Dr. Isuru Navinna Dr. Mahanama Wickramasinghe
Links
Project Repository Project Page Department of Computer Engineering University of Peradeniya