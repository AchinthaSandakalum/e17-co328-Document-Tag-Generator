AGRIBOT
Menu
About
introduction
Architecture
Design
budget
Autonomous Agricultural Robot
AGRIBOT
Find More
About
Overview
Agriculture sector has always performed as a major economic force in Sri Lanka, making a significant contribution to the national economy, food security and employment. At the same time agriculture is the livelihood of the majority in the rural sector and plays a key role in alleviating rural poverty. This has been well recognized from the time of independence and there has always been a cabinet portfolio set aside for the agriculture sector.
Problem
Lack of laborers, the difficulty of finding labourers or can't afford daily wages for them are some of the main problems that today's farmers are facing. Not only that less knowledge about environmental conditions and pests also a problem faced by farmers.
Solution
The solution to the problem will be an automated robot to automated the seeding process as well as to identify the environmental conditions.
INTRODUCTION
Why AgriBot?
Smart Farming is a widely growing area. In smart farming user can monitor their field via smart
device and control the watering, fertilizing autonomously. With this concept, people tried to develop into the next level. They want to use robots into the field to reduce the labour work. There are robots which can do seeding, cropping, identify diseases and literally everything. So now people are not just monitoring the field, they can maintain the whole field and labour cost is minimum.
So you will ask if there are already machines which can seeding, why do we need an AgriBot? The answer is normally there are some machines which consume a lot of power because they have heavy machinery components. They have a lot of disadvantages like, they have huge drilling components which turn upside down the field area, not good for the soil creatures and soil structure, sound and air pollution, not good for small seeds. In that case, AgriBot works really well, it can map the whole field and seeding. Agribot is the only drill point where we need to put seed. Also cost-effective, lightweight and eco friendly. This is the best way to seeding small seeds in big areas. Another thing is very easy to operate through a user-friendly mobile app.
AgriBot for Greenhouse farming
AgriBot is the best solution for modern Greenhouses because those are full covered areas which have sensitive sensors all over the place. Because in greenhouses every condition which plant will depend, is measured and controlled accurately and another thing is there are tap
lines all over the place. For areas like this, you can’t use heavy machinery or drones to seed plants and AgriBot is the perfect solution.
Solution Architecture
Mobile Application
Android mobile application is available for the AgriBot. The app is designed using Android Studio. Mainly the app is used to configure the robot while temperature and humidity readings can get through the mobile app. Both these procedures happen through AWS servers.
Automated Robot
The robot is used to plant seeds over a farming area.We use ESP32 SIM8000I as the microcontroller of use robot.An MPU6050 and encoders are used to navigate the robot in the farming area. An ultrasonic distance sensor is used to identify the obstacles in the path of the robot.A drill bit is used to dig the ground and put seeds. Motors are used to drill the land and control the drill bit.
Web Server
AWS server is used as the webserver for the AgriBot. Initial parameters which we will take by mobile app are passed to the robot through this server. Firebase database is used for store the credentials details as well as the specific data of the Robot.
Highlevel Diagram
Design
Click on the image to see details of each sub-sections.
Mobile Application
Overview
Frontend UI
Testing
Server Backend
Overview
Deploy
Database
Agribot
Overview
3D Model
Hardware Components
Circuit Diagram
Navigation
Communication
Our Team
"Alone we can do so little; together we can do so much." – Helen Keller
Maneesha Randeniya
Nipun Dewanarayane
Denuke Disanayake
Our Advisors
“Education is the passport to the future, for tomorrow belongs to those who prepare for it today.” – Malcolm X
Dr.Isuru Nawinne
Dr.Ziyan Maraikar
Dr.Upul Jayasinghe
Budget
Full detailed estimated budget according to market price in Sri Lanka.
Github repo
Find more informations and codes details.
Visit
Phone: +94 81 239 33 00
Email: vc@pdn.ac.lk
Web-site: http://www.pdn.ac.lk/
Faculty of Engineering.
Phone: +94 81 239 33 02
Web-site: http://eng.pdn.ac.lk/
Computer Engineering Department.
Phone: +94 81 239 39 14
Web-site: http://www.ce.pdn.ac.lk/
Contact Us
Get in touch with us.
Send Message
Copyright © Agribots 2021
Overview
Overall design
Objective:Navigate through the farm area and do the seeding.
Height :15-20 cm
Length : 20-25 cm
Width : 15-20 cm
Weight : 1 - 1.5 kg
Speed : 0.5 ft/s
Average work time : 60 - 90 min
Close
3D MODEL
3D model views of the Agribot
3D model was implemented by using Tinckercad which is available for free online tool. Below pictures shows some views of the agribot 3D model which is taken from different angles.
Get the obj file from here
Close
Hardware Components
Hardware components which will use for implement agribot
Microcontroller
Temperature & Humidity sensor
DHT11 Temperature & Humidity Sensor
Take measurements every 30 mins. Measure the humidity and temperature of the current environment
Use the DHT11 sensor module because the module will have a filtering capacitor and pull-up resistor inbuilt.
The sensor is factory calibrated and hence easy to interface with other microcontrollers.
Humidity measurement range: 20% ~95%
Humidity measurement error: ±5%
Temperature measurement range: 0℃~50℃
Temperature measurement error: ±2 ℃
Operating voltage:3.3 V~5 V,
Operating current: 0.3mA
Relay module
SRD-3VDC-SL-C Relay Module
The drilling operations of the drill bit is operated using an SRD-3VDC-SL-C Relay Module.
Sealed typed
Coil nominal voltage - 3 v
Nominal current - 120 mA
Power consumption of coil - abt. 0.36W
Motor Driver
Driver Model: TB6612FNG H-Bridge
Motor supply voltage of 2.5 to 13.5 volts DC.
Logic supply voltage of 2.7 to 5.5 volts DC.
Output current of 1.2 amperes continuous, 3.2 amperes peak.
Built-in thermal shutdown.
Efficiency 91-95%
Small module, no heat sink required
Servo Motor
Model: SG90
Two servo motors to work as a valve of our seed container and another one to place the drill bit in the correct position
Operating voltage - 3.0V~7.2V
Working Frequency - 50Hz
Motor Type - Brushed DC Motor
Gear Type - Plastic Gears
Close
Circuit Diagrams
This Diagrams shows how components wired.
Close
android application
This is the overview of Android mobile application
Android mobile application is available for the AgriBot. The app is designed using Android Studio. Mainly the app is used to configure the robot while temperature and humidity readings can get through the mobile app.
Overview
Start of the app user have to enter the Product Id to Login
Using that ID, App will subscribe to corresponding topics
App will display the sensor data and connection state of the Robot
Also user can publish initial plantation instructions to Robot
And essential control signals to autonomous process
Scalability
Firebase Database can easily increase storage and entries.
New hardware devices can be added
App can simply connect with any Device for a given ID.
In the broker, support the Asynchronous process
Can handle multiple topics at a time.
Reliability
Responsive UI
Connect with any device simply entering the device ID
Unique topics to isolation
Check the connectivity of the device
No need to have steady internet connection to work
Close Project
frontend ui
This images shows the user interface of the Android mobile application.
This is the 1st impression of user. When user run the app, appliication will start with this splash screen.
This is the login screen UI. User need to enter credential which will be provided by seller for specific robot. Each robot has unique username and password.
After user logged in, he/she can see the configuration fragment UI. This is the UI which user will use to configure the robot. As well as, it will display whether robot is connected with server.
This UI will display the weather report. This report include data which was send by the robot. Currently robot implemented with temperature and humdity sensors only. Therefore, app will fetch only temperature & humidity.
This UI includes the details of the purchesed robot. Data will be fetched from firebase database along with login. Each data are unique with the login credentials.
When user clicks the logout in bottom navigation bar, this confirmation box will appear. User may choose yes or no to logout or keep stay login.
Close
Testing
Tests that need to be done during the App building
Testings were done during the development of the app to identify the problems with the mobile app. ( Connectivity, User Inputs etc… )
Used test cases to check the expected values come as the output.
Easier than manually testing each case over and over again.
1. Subscribe the Broker
Checked the subscription - connectivity between the Mobile app and the EC2 Broker.
This is important because through the Broker only mobile app get the readings from the Robot.
Though an IP is correct, invalid topic can be subscribed. But this won’t happen in the app because topics are assigned when user successfully login to the app ( Using correct ID and the Password).
Subscription is tested using mosquitto broker(Representing Sensors of the Robot) also; using Temperature and Humidity values.
2. Publish to Broker
Checked the Publish - connectivity between the mobile app and the EC2 Broker
It is important to check whether only the correct values are delivered to the Broker from the mobile app.
Terminal is used as the Robot to check the received values are correct.
3.	User Inputs
Most critical place the Robot can go wrong is with User Inputs.
Important to check whether correct values are input by the User to the app.
4.	UI test with espresso
Additional test to check the functionality of the login page using espresso with test cases.
Summary report
Close Project
overview
Overview of the cloud deployment,MQTT and Technologies.
Overview
Create AWS EC2 instance and install Mosquitto MQTT Broker
Using EC2 IP address and port, mobile app and Robot can connect to the MQTT broker
MQTT broker will handle the publications and subscriptions
We created firebase database and entries for each Robot
Using the database app will connect with the correct device
Cloud Deployment
Create EC2 instance, Ubuntu virtual machine
Install mosquitto MQTT brokerr
Used IP of VM to connect the application
Setup security rules of EC2
Give access only to port numbers 1883 and 22 (MQTT, SSH)
MQTT Setup
Used Mosquitto broker to handle mqtt clients (App,Device)
Set Password protection to the broker
Not anyone can publish or subscribe to broker and increase the traffic
when we want to publish or subscribe we have to use the password
Used unique topics for each device
to identify whether Robot is connected or not
Set MQTT Last Will message
Publish QOS 2 messages
Data send only one time.
Highlevel Diagram
Close
Deploy in AWS
Steps to follow deploy in AWS server.
The Internet is composed two types of machines: a server or a client. A server provide services to you while the client request for the service. To ensure that our MQTT broker(the service) can be accessed using other computer or electronic devices anytime, we need to install the broker to a server machine that is always turned on and connected to the internet. To do this, we rent a virtual machine on AWS that functions like a computer.
Go to AWS Management Console
& Select EC2.
Select Launch Instances
Select the ubuntu server.
Select “ Free tier Eligible” Option & Click “Next: Configure Instance Details”
In “Configure Security Group” Tab add above rules using “Add Rule” option. Then Click “ Review and Launch”
Click “Launch”
“Create a new key pair” option & Give a “Key pair name” ,Then Download the key pair
Newly Created instance is Running there in instances.
Details of the instance. “Public IPv4 address” is used to connect with in the instance.
Start, Stop or Connect the Instance can be done by write clicking on the instance.
When select “Connect” this dialog box is displayed.
Close
database
Overview about Firebase database
Overview
Firebase realtime NoSQL database.
There is a one entry for every agribot device
Used for Login process
Using that data, app will assign unique client id
Because of that, only one app can connect to a device at the time
Using that data, app and device share data via unique topic
Useful to isolate other devices data
No write access for users
Easy to retrieve and scale the database
Close
Deploy in AWS
Steps to follow deploy in AWS server.
Use this area to describe your project. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est blanditiis dolorem culpa incidunt minus dignissimos deserunt repellat aperiam quasi sunt officia expedita beatae cupiditate, maiores repudiandae, nostrum, reiciendis facere nemo!
1. Go to AWS Management Console
& Select EC2.
Close Project